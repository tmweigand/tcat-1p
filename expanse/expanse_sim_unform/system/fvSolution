/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2206                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      fvSolution;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

solvers
{
    "(p|p_rgh)"
    {
        //solver          GAMG;
        //smoother        GaussSeidel;
        //tolerance       1e-10;
        //relTol          0;
        solver           GAMG;
        tolerance        1e-10;             // Convergence tolerance
        smoother         DICGaussSeidel;    // Smoother type
        cacheAgglomeration true;            // Cache matrix agglomeration
        nCellsInCoarsestLevel 20;           // Minimum number of cells in coarsest level
        agglomerator     faceAreaPair;      // Agglomeration method
        mergeLevels      1;                 // Number of levels to merge before coarsening
    }

    "(pFinal|p_rghFinal)"
    {
        $p;
        tolerance       1e-10;
        relTol          1.e-3;
    }

    "(U|k|epsilon)"
    {
      solver          smoothSolver;
       smoother        GaussSeidel;
        tolerance       1e-10;
        relTol          1.e-3;
    }

    "(U|k|epsilon)Final"
    {
        $U;
        tolerance       1e-10;
    }
}

SIMPLE
{
    momentumPredictor yes;
    nNonOrthogonalCorrectors 0;
    residualControl
    {
        p               1e-5;
        U               1e-5;
    }

}

relaxationFactors
{
    fields
    {
        p               0.3;
        p_rgh           0.3;
    }
    equations
    {
        U               0.7;
    }
}

cache
{
    grad(U);
}


// ************************************************************************* //
